<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>